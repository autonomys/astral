type Account @entity {
  id: ID!
  free: BigInt!
  reserved: BigInt!
  total: BigInt!
  updatedAt: Int
}

type Block @entity {
  id: ID!
  height: BigInt!
  timestamp: DateTime!
  hash: String!
  parentHash: String!
  specId: String!
  stateRoot: String!
  extrinsicRoot: String
  extrinsics: [Extrinsic!]! @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
  # TODO: add implementation for spacePledged and blockchainSize
  spacePledged: BigInt!
  blockchainSize: BigInt!
  # TODO: add calls
}

type Extrinsic @entity {
  id: ID!
  hash: String!
  indexInBlock: Int!
  nonce: BigInt
  name: String!
  signer: String
  signature: String
  error: JSON
  tip: BigInt
  fee: BigInt
  success: Boolean!
  block: Block!
  pos: Int
  timestamp: DateTime
  args: JSON
  events: [Event] @derivedFrom(field: "extrinsic")
  # TODO: add call and calls
}

type Event @entity {
  id: ID!
  indexInBlock: Int!
  name: String!
  timestamp: DateTime
  phase: String!
  pos: Int
  args: JSON
  block: Block
  extrinsic: Extrinsic
  # TODO: add call
}

# TODO: add Call
