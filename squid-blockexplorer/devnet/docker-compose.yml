version: "3.7"
networks:
  mynetwork:
    ipam:
      config:
        - subnet: 172.20.0.0/24
services:
  node:
    platform: linux/x86_64
    image: ghcr.io/subspace/node:gemini-3c-2023-feb-26-aarch64
    volumes:
      - ./node-data:/var/subspace:rw
    ports:
      - "0.0.0.0:30333:30333"
      - "0.0.0.0:30433:30433"
      - "0.0.0.0:9944:9944"
    networks:
      mynetwork:
        ipv4_address: 172.20.0.6
    restart: unless-stopped
    command: [
      # using `--chain dev` for e2e tests setup
      "--chain", "dev",
      "--base-path", "/var/subspace",
      "--execution", "wasm",
      "--blocks-pruning", "archive",
      "--state-pruning", "archive",
      "--port", "30333",
      "--dsn-listen-on", "/ip4/172.20.0.6/tcp/30433",
      "--rpc-cors", "all",
      "--rpc-methods", "safe",
      "--unsafe-ws-external",
      "--validator",
      "--name", "LOCAL_SUBSPACE_TESNET_NODE",
      "--force-authoring",
      "--force-synced"
    ]
    healthcheck:
      timeout: 5s
      interval: 30s
      retries: 5

  farmer:
    platform: linux/x86_64
    depends_on:
      node:
        condition: service_healthy
    image: ghcr.io/subspace/farmer:gemini-3c-2023-feb-26-aarch64
    volumes:
      - ./farmer-data:/var/subspace:rw
    ports:
      - "0.0.0.0:30533:30533"
    networks:
      mynetwork:
        ipv4_address: 172.20.0.7
    restart: unless-stopped
    command: [
      "--base-path", "/var/subspace",
      "farm",
      "--node-rpc-url", "ws://node:9944",
      "--listen-on", "/ip4/0.0.0.0/tcp/30533",
      "--reward-address", "JHsf5YvwXqatWnMjYqWNuWNqgNrEMZJAqp25P6LQ5SAmtRM",
      "--plot-size", "10G"
    ]

  db:
    depends_on:
      - node
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: squid-archive

  ingest:
    depends_on:
      - db
    restart: on-failure
    image: subsquid/substrate-ingest:firesquid
    command: [
      "-e", "ws://host.docker.internal:9944",
      "-c", "10",
      "--prom-port", "9090",
      "--out", "postgres://postgres:postgres@db:5432/squid-archive"
    ]

  gateway:
    depends_on:
      - db
    image: subsquid/substrate-gateway:firesquid
    environment:
      RUST_LOG: "substrate_gateway=info,actix_server=info"
    command: [
       "--database-url", "postgres://postgres:postgres@db:5432/squid-archive",
       "--database-max-connections", "3", # max number of concurrent database connections
       "--scan-start-value", "20", # works as batch size but for a whole archive, default is 100
    ]
    ports:
      - "8888:8000"

  # Explorer service is optional.
  # It provides rich GraphQL API for querying archived data.
  # Many developers find it very useful for exploration and debugging.
  explorer:
    image: subsquid/substrate-explorer:firesquid
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: "5432"
      DB_NAME: "squid-archive"
      DB_USER: "postgres"
      DB_PASS: "postgres"
    ports:
      - "4444:3000"
volumes:
  node-data:
  farmer-data:
